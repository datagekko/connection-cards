{"ast":null,"code":"var _jsxFileName = \"/Users/kiliandreher/connection-cards/src/container/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from '../components/Card';\nimport questions from './questions.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [shownIndices, setShownIndices] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(getRandomQuestion());\n  function getRandomQuestion() {\n    if (shownIndices.length === questions.length) {\n      // If all questions have been shown, reset the shownIndices\n      setShownIndices([]);\n    }\n    let randomIndex;\n    do {\n      randomIndex = Math.floor(Math.random() * questions.length);\n    } while (shownIndices.includes(randomIndex)); // Ensure the question hasn't been shown yet\n\n    setShownIndices(prevIndices => [...prevIndices, randomIndex]);\n    return questions[randomIndex];\n  }\n  const handleCardClick = () => {\n    setCurrentQuestion(getRandomQuestion());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center min-h-screen bg-gray-100 p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4 text-center\",\n      children: \"Connection Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-6 text-xl text-center\",\n      children: \"Play a game of genuine connection.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow flex items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: handleCardClick,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          question: currentQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"N2geh6lZA2BReIR3MIsRQI0tN8U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Card","questions","jsxDEV","_jsxDEV","App","_s","shownIndices","setShownIndices","currentQuestion","setCurrentQuestion","getRandomQuestion","length","randomIndex","Math","floor","random","includes","prevIndices","handleCardClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","question","_c","$RefreshReg$"],"sources":["/Users/kiliandreher/connection-cards/src/container/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Card from '../components/Card';\nimport questions from './questions.js';\nimport './App.css';\n\nfunction App() {\n  const [shownIndices, setShownIndices] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(getRandomQuestion());\n\n  function getRandomQuestion() {\n    if (shownIndices.length === questions.length) {\n      // If all questions have been shown, reset the shownIndices\n      setShownIndices([]);\n    }\n\n    let randomIndex;\n    do {\n      randomIndex = Math.floor(Math.random() * questions.length);\n    } while (shownIndices.includes(randomIndex)); // Ensure the question hasn't been shown yet\n\n    setShownIndices(prevIndices => [...prevIndices, randomIndex]);\n    return questions[randomIndex];\n  }\n\n  const handleCardClick = () => {\n    setCurrentQuestion(getRandomQuestion());\n  };\n\n  return (\n    <div className='flex flex-col items-center min-h-screen bg-gray-100 p-8'>\n        <h1 className='text-3xl font-bold mb-4 text-center'>Connection Cards</h1>\n        <p className='mb-6 text-xl text-center'>Play a game of genuine connection.</p>\n        <div className='flex-grow flex items-center'>\n          <div onClick={handleCardClick}>\n            <Card question={currentQuestion} />\n          </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAACW,iBAAiB,CAAC,CAAC,CAAC;EAE3E,SAASA,iBAAiBA,CAAA,EAAG;IAC3B,IAAIJ,YAAY,CAACK,MAAM,KAAKV,SAAS,CAACU,MAAM,EAAE;MAC5C;MACAJ,eAAe,CAAC,EAAE,CAAC;IACrB;IAEA,IAAIK,WAAW;IACf,GAAG;MACDA,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGd,SAAS,CAACU,MAAM,CAAC;IAC5D,CAAC,QAAQL,YAAY,CAACU,QAAQ,CAACJ,WAAW,CAAC,EAAE,CAAC;;IAE9CL,eAAe,CAACU,WAAW,IAAI,CAAC,GAAGA,WAAW,EAAEL,WAAW,CAAC,CAAC;IAC7D,OAAOX,SAAS,CAACW,WAAW,CAAC;EAC/B;EAEA,MAAMM,eAAe,GAAGA,CAAA,KAAM;IAC5BT,kBAAkB,CAACC,iBAAiB,CAAC,CAAC,CAAC;EACzC,CAAC;EAED,oBACEP,OAAA;IAAKgB,SAAS,EAAC,yDAAyD;IAAAC,QAAA,gBACpEjB,OAAA;MAAIgB,SAAS,EAAC,qCAAqC;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzErB,OAAA;MAAGgB,SAAS,EAAC,0BAA0B;MAAAC,QAAA,EAAC;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9ErB,OAAA;MAAKgB,SAAS,EAAC,6BAA6B;MAAAC,QAAA,eAC1CjB,OAAA;QAAKsB,OAAO,EAAEP,eAAgB;QAAAE,QAAA,eAC5BjB,OAAA,CAACH,IAAI;UAAC0B,QAAQ,EAAElB;QAAgB;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACnB,EAAA,CAlCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}