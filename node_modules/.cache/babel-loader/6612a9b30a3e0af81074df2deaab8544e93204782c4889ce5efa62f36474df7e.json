{"ast":null,"code":"import _toConsumableArray from\"/Users/kiliandreher/connection-cards/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/kiliandreher/connection-cards/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import Card from'../components/Card';import questions from'./questions.js';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),shownIndices=_useState2[0],setShownIndices=_useState2[1];var _useState3=useState(function(){return getRandomQuestion(shownIndices);}),_useState4=_slicedToArray(_useState3,2),currentQuestion=_useState4[0],setCurrentQuestion=_useState4[1];function getRandomQuestion(currentShownIndices){if(currentShownIndices.length===questions.length){// If all questions have been shown, reset the shownIndices\nsetShownIndices([]);currentShownIndices=[];}var randomIndex;do{randomIndex=Math.floor(Math.random()*questions.length);}while(currentShownIndices.includes(randomIndex));// Ensure the question hasn't been shown yet\nsetShownIndices(function(prevIndices){return[].concat(_toConsumableArray(prevIndices),[randomIndex]);});return questions[randomIndex];}var handleCardClick=function handleCardClick(){setCurrentQuestion(getRandomQuestion(shownIndices));};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center min-h-screen bg-gray-100 p-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold mb-4 text-center\",children:\"Connection Cards\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-6 text-xl text-center\",children:\"Play a game of genuine connection.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-grow flex items-center\",children:/*#__PURE__*/_jsx(\"div\",{onClick:handleCardClick,children:/*#__PURE__*/_jsx(Card,{question:currentQuestion})})})]});}export default App;","map":{"version":3,"names":["React","useState","Card","questions","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","shownIndices","setShownIndices","_useState3","getRandomQuestion","_useState4","currentQuestion","setCurrentQuestion","currentShownIndices","length","randomIndex","Math","floor","random","includes","prevIndices","concat","_toConsumableArray","handleCardClick","className","children","onClick","question"],"sources":["/Users/kiliandreher/connection-cards/src/container/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Card from '../components/Card';\nimport questions from './questions.js';\nimport './App.css';\n\nfunction App() {\n  const [shownIndices, setShownIndices] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(() => getRandomQuestion(shownIndices));\n\n  function getRandomQuestion(currentShownIndices) {\n    if (currentShownIndices.length === questions.length) {\n      // If all questions have been shown, reset the shownIndices\n      setShownIndices([]);\n      currentShownIndices = [];\n    }\n\n    let randomIndex;\n    do {\n      randomIndex = Math.floor(Math.random() * questions.length);\n    } while (currentShownIndices.includes(randomIndex)); // Ensure the question hasn't been shown yet\n\n    setShownIndices(prevIndices => [...prevIndices, randomIndex]);\n    return questions[randomIndex];\n  }\n\n  const handleCardClick = () => {\n    setCurrentQuestion(getRandomQuestion(shownIndices));\n  };\n\n  return (\n    <div className='flex flex-col items-center min-h-screen bg-gray-100 p-8'>\n        <h1 className='text-3xl font-bold mb-4 text-center'>Connection Cards</h1>\n        <p className='mb-6 text-xl text-center'>Play a game of genuine connection.</p>\n        <div className='flex-grow flex items-center'>\n          <div onClick={handleCardClick}>\n            <Card question={currentQuestion} />\n          </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"4PAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,IAAI,KAAM,oBAAoB,CACrC,MAAO,CAAAC,SAAS,KAAM,gBAAgB,CACtC,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,IAAAC,SAAA,CAAwCR,QAAQ,CAAC,EAAE,CAAC,CAAAS,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA7CG,YAAY,CAAAF,UAAA,IAAEG,eAAe,CAAAH,UAAA,IACpC,IAAAI,UAAA,CAA8Cb,QAAQ,CAAC,iBAAM,CAAAc,iBAAiB,CAACH,YAAY,CAAC,GAAC,CAAAI,UAAA,CAAAL,cAAA,CAAAG,UAAA,IAAtFG,eAAe,CAAAD,UAAA,IAAEE,kBAAkB,CAAAF,UAAA,IAE1C,QAAS,CAAAD,iBAAiBA,CAACI,mBAAmB,CAAE,CAC9C,GAAIA,mBAAmB,CAACC,MAAM,GAAKjB,SAAS,CAACiB,MAAM,CAAE,CACnD;AACAP,eAAe,CAAC,EAAE,CAAC,CACnBM,mBAAmB,CAAG,EAAE,CAC1B,CAEA,GAAI,CAAAE,WAAW,CACf,EAAG,CACDA,WAAW,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAGrB,SAAS,CAACiB,MAAM,CAAC,CAC5D,CAAC,MAAQD,mBAAmB,CAACM,QAAQ,CAACJ,WAAW,CAAC,EAAG;AAErDR,eAAe,CAAC,SAAAa,WAAW,WAAAC,MAAA,CAAAC,kBAAA,CAAQF,WAAW,GAAEL,WAAW,IAAC,CAAC,CAC7D,MAAO,CAAAlB,SAAS,CAACkB,WAAW,CAAC,CAC/B,CAEA,GAAM,CAAAQ,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAA,CAAS,CAC5BX,kBAAkB,CAACH,iBAAiB,CAACH,YAAY,CAAC,CAAC,CACrD,CAAC,CAED,mBACEL,KAAA,QAAKuB,SAAS,CAAC,yDAAyD,CAAAC,QAAA,eACpE1B,IAAA,OAAIyB,SAAS,CAAC,qCAAqC,CAAAC,QAAA,CAAC,kBAAgB,CAAI,CAAC,cACzE1B,IAAA,MAAGyB,SAAS,CAAC,0BAA0B,CAAAC,QAAA,CAAC,oCAAkC,CAAG,CAAC,cAC9E1B,IAAA,QAAKyB,SAAS,CAAC,6BAA6B,CAAAC,QAAA,cAC1C1B,IAAA,QAAK2B,OAAO,CAAEH,eAAgB,CAAAE,QAAA,cAC5B1B,IAAA,CAACH,IAAI,EAAC+B,QAAQ,CAAEhB,eAAgB,CAAE,CAAC,CAChC,CAAC,CACH,CAAC,EACL,CAAC,CAEV,CAEA,cAAe,CAAAT,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}